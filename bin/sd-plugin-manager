#!/usr/bin/env php
<?php

use sd\SwPluginManager\Command\ContainerAwareCommandInterface;
use sd\SwPluginManager\DependencyInjection\PluginProviderPass;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Console\Application;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;

require_once __DIR__ . '/../vendor/autoload.php';

// Create container and register compiler pass
$containerBuilder = new ContainerBuilder();
$containerBuilder->addCompilerPass(new PluginProviderPass());

// Load services
$yamlConfigLoader = new YamlFileLoader($containerBuilder, new FileLocator(__DIR__ . '/../src'));
$yamlConfigLoader->load('Resources/config/services.yml');

$containerBuilder->compile();

// Initialize CLI application
$application = new Application();
$commandsClassBase = 'sd\\SwPluginManager\\Command\\';

// Add all commands
$searchFor = 'sd.command.';
foreach ($containerBuilder->getServiceIds() as $id) {
    if (substr($id, 0, strlen($searchFor)) === $searchFor) {
        $command = $containerBuilder->get($id);
        if (is_a($command, ContainerAwareCommandInterface::class)) {
            $command->setContainer($containerBuilder);
        }
        $application->add($command);
    }
}

$application->run();
